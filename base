# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'Physics_calculator.ui'
#
# Created by: PyQt5 UI code generator 5.15.1
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

import math
from PyQt5 import QtCore, QtGui, QtWidgets

Pi = 3.14


def s1():
    print('Формула для расчета: S = x - x0')
    answer = input('Желаете получить расчет формулы? (Да/Нет)')
    if answer == 'Да':
        x = float(input('Введите x: '))
        x0 = float(input('Введите x0: '))
        s1 = x - x0
        print('Ответ: ', s1)


def s2():
    print('Формула для расчета: S = ((v + v0)/2) * t')
    answer = input('Желаете получить расчет формулы? (Да/Нет)')
    if answer == 'Да':
        v = float(input('Введите v: '))
        v0 = float(input('Введите v0: '))
        t = float(input('Введите t: '))
        s2 = ((v + v0) / 2) * t
        print('Ответ: ', s2)


def s3():
    print('Формула для расчета: S = v0 * t + (a * t^2)/2')
    answer = input('Желаете получить расчет формулы? (Да/Нет)')
    if answer == 'Да':
        v0 = float(input('Введите v0: '))
        a = float(input('Введите a: '))
        t = float(input('Введите t: '))
        s3 = v0 * t + (a * t ** 2) / 2
        print('Ответ: ', s3)


def s4():
    print('Формула для расчета: S = (v^2 - v0^2)/(2 * a)')
    answer = input('Желаете получить расчет формулы? (Да/Нет)')
    if answer == 'Да':
        v = float(input('Введите v: '))
        v0 = float(input('Введите v0: '))
        a = float(input('Введите a: '))
        s4 = (v ** 2 - v0 ** 2) / (2 * a)
        print('Ответ: ', s4)


def s5():
    print('Формула для расчета: S = x - x0')
    print('Формула для расчета: S = ((v + v0)/2) * t')
    print('Формула для расчета: S = v0 * t + (a * t^2)/2')
    print('Формула для расчета: S = (v^2 - v0^2)/(2 * a)')


def v1():
    print('Формула для расчета: v = S/t')
    answer = input('Желаете получить расчет формулы? (Да/Нет)')
    if answer == 'Да':
        S = float(input('Введите S: '))
        t = float(input('Введите t: '))
        v1 = S / t
        print('Ответ: ', v1)


def v2():
    print('Формула для расчета: v = (2 * Pi * r) / T')
    answer = input('Желаете получить расчет формулы? (Да/Нет)')
    if answer == 'Да':
            r = float(input('Введите r: '))
            T = float(input('Введите T: '))
            v2 = (2 * Pi * r) / T
            print('Ответ: ', v2)


def v3():
    print('Формула для расчета: v = 2 * Pi * r * V')
    answer = input('Желаете получить расчет формулы? (Да/Нет)')
    if answer == 'Да':
        r = float(input('Введите r: '))
        V = float(input('Введите V: '))
        v3 = 2 * Pi * r * V
        print('Ответ: ', v3)


def v4():
    print('Формула для расчета: v = om * r')
    answer = input('Желаете получить расчет формулы? (Да/Нет)')
    if answer == 'Да':
        om = float(input('Введите om: '))
        r = float(input('Введите r: '))
        v4 = om * r
        print('Ответ: ', v4)


def v5():
    print('Формула для расчета: v = √(G * (M / R))')
    answer = input('Желаете получить расчет формулы? (Да/Нет)')
    if answer == 'Да':
        G = float(input('Введите G: '))
        M = float(input('Введите M: '))
        R = float(input('Введите R: '))
        v5 = math.sqrt(G * (M / R))
        print('Ответ: ', v5)


def v6():
    print('Формула для расчета: v = S/t')
    print('Формула для расчета: v = (2 * Pi * r) / T')
    print('Формула для расчета: v = 2 * Pi * r * V')
    print('Формула для расчета: v = om * r')
    print('Формула для расчета: v = √(G * (M / R))')


def a1():
    print('Формула для расчета: a = (v - v0)/t')
    answer = input('Желаете получить расчет формулы? (Да/Нет)')
    if answer == 'Да':
        v = float(input('Введите v: '))
        v0 = float(input('Введите v0: '))
        t = float(input('Введите t: '))
        a1 = (v - v0) / t
        print('Ответ: ', a1)


def a2():
    print('Формула для расчета: a = v^2 / r')
    answer = input('Желаете получить расчет формулы? (Да/Нет)')
    if answer == 'Да':
        v = float(input('Введите v: '))
        r = float(input('Введите r: '))
        a2 = v ** 2 / r
        print('Ответ: ', a2)


def a3():
    print('Формула для расчета: a = om^2 / r')
    answer = input('Желаете получить расчет формулы? (Да/Нет)')
    if answer == 'Да':
        om = float(input('Введите om: '))
        r = float(input('Введите r: '))
        a3 = om ** 2 / r
        print('Ответ: ', a3)


def a4():
    print('Формула для расчета: a = Fr / m (Второй закон Ньютона)')
    answer = input('Желаете получить расчет формулы? (Да/Нет)')
    if answer == 'Да':
        Fr = float(input('Введите Fr: '))
        m = float(input('Введите m: '))
        a4 = Fr / m
        print('Ответ: ', a4)


def a5():
    print('Формула для расчета: a = (v - v0)/t')
    print('Формула для расчета: a = v^2 / r')
    print('Формула для расчета: a = om^2 / r')
    print('Формула для расчета: a = Fr / m (Второй закон Ньютона)')


def T1():
    print('Формула для расчета: T = t / N')
    answer = input('Желаете получить расчет формулы? (Да/Нет)')
    if answer == 'Да':
        t = float(input('Введите t: '))
        N = float(input('Введите N: '))
        T1 = t / N
        print('Ответ: ', T1)


def T2():
    print('Формула для расчета: T = 1 / V')
    answer = input('Желаете получить расчет формулы? (Да/Нет)')
    if answer == 'Да':
        V = float(input('Введите V: '))
        T2 = 1 / V
        print('Ответ: ', T2)


def T3():
    print('Формула для расчета: T = t / N')
    print('Формула для расчета: T = 1 / V')


def om1():
    print('Формула для расчета: om = fi/t')
    answer = input('Желаете получить расчет формулы? (Да/Нет)')
    if answer == 'Да':
        fi = float(input('Введите fi: '))
        t = float(input('Введите t: '))
        om1 = fi / t
        print('Ответ: ', om1)


def om2():
    print('Формула для расчета: om = (2 * Pi) / T')
    answer = input('Желаете получить расчет формулы? (Да/Нет)')
    if answer == 'Да':
        T = float(input('Введите T: '))
        om2 = (2 * Pi) / T
        print('Ответ: ', om2)


def om3():
    print('Формула для расчета: om = 2 * Pi * v')
    answer = input('Желаете получить расчет формулы? (Да/Нет)')
    if answer == 'Да':
        v = float(input('Введите v: '))
        om3 = 2 * Pi * v
        print('Ответ: ', om3)


def om4():
    print('Формула для расчета: om = fi/t')
    print('Формула для расчета: om = (2 * Pi) / T')
    print('Формула для расчета: om = 2 * Pi * v')


def F1():
    print('Формула для расчета: F трения = μ * N')
    answer = input('Желаете получить расчет формулы? (Да/Нет)')
    if answer == 'Да':
        u = float(input('Введите μ: '))
        N = float(input('Введите N: '))
        F1 = u * N
        print('Ответ: ', F1)


def F2():
    print('Формула для расчета: F упругости = -k * x')
    answer = input('Желаете получить расчет формулы? (Да/Нет)')
    if answer == 'Да':
        k = float(input('Введите k: '))
        x = float(input('Введите x: '))
        F2 = -k * x
        print('Ответ: ', F2)


def F3():
    print('Формула для расчета: F = m * g')
    answer = input('Желаете получить расчет формулы? (Да/Нет)')
    if answer == 'Да':
        m = float(input('Введите m: '))
        g = float(input('Введите g: '))
        F3 = m * g
        print('Ответ: ', F3)


def F4():
    print('Формула для расчета: F = G * ((m1 * m2) / r^2)')
    answer = input('Желаете получить расчет формулы? (Да/Нет)')
    if answer == 'Да':
        G = float(input('Введите G: '))
        m1 = float(input('Введите m1: '))
        m2 = float(input('Введите m2: '))
        r = float(input('Введите r: '))
        F4 = G * ((m1 * m2) / r ** 2)
        print('Ответ: ', F4)


def F5():
    print('Формула для расчета: F дно = plotnost * g * H * S дно')
    answer = input('Желаете получить расчет формулы? (Да/Нет)')
    if answer == 'Да':
        plotnost = float(input('Введите плотность: '))
        g = float(input('Введите g: '))
        H = float(input('Введите H: '))
        S = float(input('Введите S: '))
        F5 = plotnost * g * H * S
        print('Ответ: ', F5)


def F6():
    print('Формула для расчета:  F бок = 1/2 * plotnost * g * H * S бок')
    answer = input('Желаете получить расчет формулы? (Да/Нет)')
    if answer == 'Да':
        plotnost = float(input('Введите плотность: '))
        g = float(input('Введите g: '))
        H = float(input('Введите H: '))
        S = float(input('Введите S: '))
        F6 = 0.5 * plotnost * g * H * S
        print('Ответ: ', F6)


def F7():
    print('Формула для расчета: F = plotnost * g * V (Закон Архимеда)')
    answer = input('Желаете получить расчет формулы? (Да/Нет)')
    if answer == 'Да':
        plotnost = float(input('Введите плотность: '))
        g = float(input('Введите g: '))
        V = float(input('Введите V: '))
        F7 = plotnost * g * V
        print('Ответ: ', F7)


def F8():
    print('Формула для расчета: F2 = F1 * (S2 / S1)')
    answer = input('Желаете получить расчет формулы? (Да/Нет)')
    if answer == 'Да':
        F = float(input('Введите F: '))
        S2 = float(input('Введите S2: '))
        S1 = float(input('Введите S1: '))
        F8 = F * (S2 / S1)
        print('Ответ: ', F8)


def F9():
    print('Формула для расчета: F трения = μ * N')
    print('Формула для расчета: F упругости = -k * x')
    print('Формула для расчета: F = m * g')
    print('Формула для расчета: F = G * ((m1 * m2) / r^2)')
    print('Формула для расчета: F дно = plotnost * g * H * S дно')
    print('Формула для расчета:  F бок = 1/2 * plotnost * g * H * S бок')
    print('Формула для расчета: F = plotnost * g * V (Закон Архимеда)')
    print('Формула для расчета: F2 = F1 * (S2 / S1)')


def g1():
    print('Формула для расчета: g = G * (M / (R + h)^2)')
    answer = input('Желаете получить расчет формулы? (Да/Нет)')
    if answer == 'Да':
        G = float(input('Введите G: '))
        M = float(input('Введите M: '))
        R = float(input('Введите R: '))
        h = float(input('Введите h: '))
        g1 = G * (M / (R + h) ** 2)
        print('Ответ: ', g1)


def g2():
    print('Формула для расчета: g = G * (M / (R + h)^2)')


def P1():
    print('Формула для расчета: P = m * (g - a)')
    answer = input('Желаете получить расчет формулы? (Да/Нет)')
    if answer == 'Да':
        m = float(input('Введите m: '))
        g = float(input('Введите g: '))
        a = float(input('Введите a: '))
        P1 = m * (g - a)
        print('Ответ: ', P1)


def P2():
    print('Формула для расчета: P = m * (g - a)')


def M1():
    print('Формула для расчета: M = F * d')
    answer = input('Желаете получить расчет формулы? (Да/Нет)')
    if answer == 'Да':
        F = float(input('Введите F: '))
        d = float(input('Введите d: '))
        M1 = F * d
        print('Ответ: ', M1)


def M2():
    print('Формула для расчета: M = F * d')


def p1():
    print('Формула для расчета:  p = F / S')
    answer = input('Желаете получить расчет формулы? (Да/Нет)')
    if answer == 'Да':
        F = float(input('Введите F: '))
        S = float(input('Введите S: '))
        p1 = F / S
        print('Ответ: ', p1)


def p2():
    print('Формула для расчета: p = ρ * g * h')
    answer = input('Желаете получить расчет формулы? (Да/Нет)')
    if answer == 'Да':
        plotnost = float(input('Введите plotnost: '))
        g = float(input('Введите g: '))
        h = float(input('Введите h: '))
        p2 = plotnost * g * h
        print('Ответ: ', p2)


def p3():
    print('Формула для расчета:  p = F / S')
    print('Формула для расчета: p = ρ * g * h')


def plotnost1():
    print('Формула для расчета: plotnost = m / V')
    answer = input('Желаете получить расчет формулы? (Да/Нет)')
    if answer == 'Да':
        m = float(input('Введите m: '))
        V = float(input('Введите V: '))
        plotnost1 = m / V
        print('Ответ: ', plotnost1)


def plotnost2():
    print('Формула для расчета: plotnost = m / V')


def A1():
    print('Формула для расчета: A = F * s * cosα')
    answer = input('Желаете получить расчет формулы? (Да/Нет)')
    if answer == 'Да':
        F = float(input('Введите F: '))
        s = float(input('Введите s: '))
        cosa = float(input('Введите cosa: '))
        A1 = F * s * cosa
        print('Ответ: ', A1)


def A2():
    print('Формула для расчета: A = -F трения * s')
    answer = input('Желаете получить расчет формулы? (Да/Нет)')
    if answer == 'Да':
        F = float(input('Введите F: '))
        s = float(input('Введите s: '))
        A2 = -F * s
        print('Ответ: ', A2)


def A3():
    print('Формула для расчета: A = m * g * (h1 - h2)')
    answer = input('Желаете получить расчет формулы? (Да/Нет)')
    if answer == 'Да':
        m = float(input('Введите m: '))
        g = float(input('Введите g: '))
        h1 = float(input('Введите h1: '))
        h2 = float(input('Введите h2: '))
        A3 = m * g * (h1 - h2)
        print('Ответ: ', A3)


def A4():
    print('Формула для расчета: A = k / 2 * (x1^2 - x2^2)')
    answer = input('Желаете получить расчет формулы? (Да/Нет)')
    if answer == 'Да':
        k = float(input('Введите k: '))
        x1 = float(input('Введите x1: '))
        x2 = float(input('Введите x2: '))
        A4 = k / 2 * (x1 ** 2 - x2 ** 2)
        print('Ответ: ', A4)


def A5():
    print('Формула для расчета: A = (m * v2^2) / 2 - (m * v1^2) / 2')
    answer = input('Желаете получить расчет формулы? (Да/Нет)')
    if answer == 'Да':
        m = float(input('Введите m: '))
        v2 = float(input('Введите v2: '))
        v1 = float(input('Введите v1: '))
        A5 = (m * v2 ** 2) / 2 - (m * v1 ** 2) / 2
        print('Ответ: ', A5)


def A6():
    print('Формула для расчета: A = F * s * cosα')
    print('Формула для расчета: A = -F трения * s')
    print('Формула для расчета: A = m * g * (h1 - h2)')
    print('Формула для расчета: A = k / 2 * (x1^2 - x2^2)')
    print('Формула для расчета: A = (m * v2^2) / 2 - (m * v1^2) / 2')


def E1():
    print('Формула для расчета: Ek = (m * v^2) / 2')
    answer = input('Желаете получить расчет формулы? (Да/Нет)')
    if answer == 'Да':
        m = float(input('Введите m: '))
        v = float(input('Введите v: '))
        E1 = (m * v ** 2) / 2
        print('Ответ: ', E1)


def E2():
    print('Формула для расчета: Ep = m * g * h')
    answer = input('Желаете получить расчет формулы? (Да/Нет)')
    if answer == 'Да':
        m = float(input('Введите m: '))
        g = float(input('Введите g: '))
        h = float(input('Введите h: '))
        E2 = m * g * h
        print('Ответ: ', E2)


def E3():
    print('Формула для расчета: Ep = (k * x^2) / 2')
    answer = input('Желаете получить расчет формулы? (Да/Нет)')
    if answer == 'Да':
        k = float(input('Введите k: '))
        x = float(input('Введите x: '))
        E3 = (k * x ** 2) / 2
        print('Ответ: ', E3)


def E4():
    print('Формула для расчета: E = Ek + Ep = const')
    answer = input('Желаете получить расчет формулы? (Да/Нет)')
    if answer == 'Да':
        Ek = float(input('Введите Ek: '))
        Ep = float(input('Введите Ep: '))
        E4 = Ek + Ep
        print('Ответ: ', E4)


def E5():
    print('Формула для расчета: Ek = (m * v^2) / 2')
    print('Формула для расчета: Ep = m * g * h')
    print('Формула для расчета: Ep = (k * x^2) / 2')
    print('Формула для расчета: E = Ek + Ep = const')


def N1():
    print('Формула для расчета: N = F * v')
    answer = input('Желаете получить расчет формулы? (Да/Нет)')
    if answer == 'Да':
        F = float(input('Введите F: '))
        v = float(input('Введите v: '))
        N1 = F * v
        print('Ответ: ', N1)


def N2():
    print('Формула для расчета: N = A / t')
    answer = input('Желаете получить расчет формулы? (Да/Нет)')
    if answer == 'Да':
        A = float(input('Введите A: '))
        t = float(input('Введите t: '))
        N2 = A / t
        print('Ответ: ', N2)


def N3():
    print('Формула для расчета: N = F * v')
    print('Формула для расчета: N = A / t')


class Ui_Form(object):
    def setupUi(self, Form):
        Form.setObjectName("Form")
        Form.resize(907, 657)
        Form.setStyleSheet("background-color: rgb(57, 57, 57);")
        self.label = QtWidgets.QLabel(Form)
        self.label.setGeometry(QtCore.QRect(26, 12, 851, 61))
        font = QtGui.QFont()
        font.setFamily("Notram")
        font.setPointSize(20)
        self.label.setFont(font)
        self.label.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.label.setStyleSheet("background-color: rgb(0, 0, 0);\n"
                                 "color: rgb(85, 255, 127);")
        self.label.setAlignment(QtCore.Qt.AlignCenter)
        self.label.setObjectName("label")
        self.label_2 = QtWidgets.QLabel(Form)
        self.label_2.setGeometry(QtCore.QRect(26, 92, 441, 361))
        font = QtGui.QFont()
        font.setFamily("Sitka Small")
        font.setPointSize(12)
        self.label_2.setFont(font)
        self.label_2.setStyleSheet("background-color: rgb(38, 38, 38);\n"
                                   "color: rgb(85, 255, 127);")
        self.label_2.setScaledContents(False)
        self.label_2.setAlignment(QtCore.Qt.AlignRight | QtCore.Qt.AlignTop | QtCore.Qt.AlignTrailing)
        self.label_2.setObjectName("label_2")
        self.pushButton = QtWidgets.QPushButton(Form)
        self.pushButton.setGeometry(QtCore.QRect(24, 562, 441, 81))
        font = QtGui.QFont()
        font.setFamily("MS UI Gothic")
        font.setPointSize(18)
        self.pushButton.setFont(font)
        self.pushButton.setStyleSheet("background-color: rgb(85, 255, 127);")
        self.pushButton.setObjectName("pushButton")
        self.pushButton.clicked.connect(s1)
        self.checkBox = QtWidgets.QCheckBox(Form)
        self.checkBox.setGeometry(QtCore.QRect(530, 90, 291, 41))
        font = QtGui.QFont()
        font.setFamily("Myriad Pro Light")
        font.setPointSize(14)
        font.setBold(True)
        font.setWeight(75)
        self.checkBox.setFont(font)
        self.checkBox.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.checkBox.setStyleSheet("background-color: rgb(50, 50, 50);\n"
                                    "selection-background-color: rgb(85, 255, 127);\n"
                                    "color: rgb(85, 255, 127);")
        self.checkBox.setChecked(False)
        self.checkBox.setTristate(False)
        self.checkBox.setObjectName("checkBox")
        self.lineEdit = QtWidgets.QLineEdit(Form)
        self.lineEdit.setGeometry(QtCore.QRect(30, 470, 431, 71))
        font = QtGui.QFont()
        font.setFamily("November")
        font.setPointSize(12)
        self.lineEdit.setFont(font)
        self.lineEdit.setToolTipDuration(-1)
        self.lineEdit.setStyleSheet("background-color: rgb(85, 85, 85);\n"
                                    "color: rgb(85, 255, 127);")
        self.lineEdit.setAlignment(QtCore.Qt.AlignCenter)
        self.lineEdit.setObjectName("lineEdit")
        self.label_3 = QtWidgets.QLabel(Form)
        self.label_3.setGeometry(QtCore.QRect(486, 142, 181, 511))
        self.label_3.setStyleSheet("background-color: rgb(43, 43, 43);\n"
                                   "color: rgb(85, 255, 127);")
        self.label_3.setObjectName("label_3")
        self.label_4 = QtWidgets.QLabel(Form)
        self.label_4.setGeometry(QtCore.QRect(680, 150, 211, 491))
        self.label_4.setStyleSheet("background-color: rgb(43, 43, 43);\n"
                                   "color: rgb(85, 255, 127);")
        self.label_4.setObjectName("label_4")

        self.retranslateUi(Form)
        QtCore.QMetaObject.connectSlotsByName(Form)

    def retranslateUi(self, Form):
        _translate = QtCore.QCoreApplication.translate
        Form.setWindowTitle(_translate("Form", "PHYSICS CALCULATOR"))
        self.label.setText(_translate("Form", "PHYSICS CALCULATOR"))
        self.label_2.setText(_translate("Form",
                                        "<html><head/><body><p align=\"center\"><span style=\" font-size:15pt;\">Вводите по очереди:</span></p><p align=\"center\"><span style=\" font-size:15pt;\">1) Что вы хотите найти?</span></p><p align=\"center\"><span style=\" font-size:15pt;\">2) Укажите переменные через пробел</span></p>"))
        self.pushButton.setText(_translate("Form", "Указать/Рассчитать"))
        self.checkBox.setText(_translate("Form", "Автоматический Рассчет"))
        self.lineEdit.setPlaceholderText(_translate("Form", "Укажите значения через пробел"))
        self.label_3.setText(_translate("Form",
                                        "<html><head/><body><p align=\"center\"><span style=\" font-size:10pt;\">Таблица величин:</span></p><p align=\"center\"><span style=\" font-size:10pt;\">S - Расстояние</span></p><p align=\"center\"><span style=\" font-size:10pt;\">x - Координата</span></p><p align=\"center\"><span style=\" font-size:10pt;\">x0 - Начальная координата</span></p><p align=\"center\"><span style=\" font-size:10pt;\">v - Скорость</span></p><p align=\"center\"><span style=\" font-size:10pt;\">v0 - начальная скорость</span></p><p align=\"center\"><span style=\" font-size:10pt;\">V - объем</span></p><p align=\"center\"><span style=\" font-size:10pt;\">t - Время</span></p><p align=\"center\"><span style=\" font-size:10pt;\">a - ускорение</span></p><p align=\"center\"><span style=\" font-size:10pt;\">N - мощность</span></p><p align=\"center\"><span style=\" font-size:10pt;\">T - период обращения</span></p><p align=\"center\"><span style=\" font-size:10pt;\">r - радиус</span></p><p align=\"center\"><span style=\" font-size:10pt;\">om - омега</span></p><p align=\"center\"><span style=\" font-size:10pt;\">fi - угол поворота</span></p><p align=\"center\"><span style=\" font-size:10pt;\">F - сила</span></p><p align=\"center\"><span style=\" font-size:10pt;\">F1 - начальная сила</span></p><p align=\"center\"><span style=\" font-size:10pt;\">F2 - конечная сила<br/></span></p></body></html>"))
        self.label_4.setText(_translate("Form",
                                        "<html><head/><body><p align=\"center\"><span style=\" font-size:10pt;\">u - коэффициент трения скольжения</span></p><p align=\"center\"><span style=\" font-size:10pt;\">k - коэффициент упругости</span></p><p align=\"center\"><span style=\" font-size:10pt;\">g - ускорение свободного падения (на планете)</span></p><p align=\"center\"><span style=\" font-size:10pt;\">P - вес тела</span></p><p align=\"center\"><span style=\" font-size:10pt;\">m - масса тела</span></p><p align=\"center\"><span style=\" font-size:10pt;\">G - гравитационная постоянная</span></p><p align=\"center\"><span style=\" font-size:10pt;\">h - высота</span></p><p align=\"center\"><span style=\" font-size:10pt;\">R - радиус планеты</span></p><p align=\"center\"><span style=\" font-size:10pt;\">d - длина от оси вращения</span></p><p align=\"center\"><span style=\" font-size:10pt;\">M - масса планеты</span></p><p align=\"center\"><span style=\" font-size:10pt;\">plotnost - плотность</span></p><p align=\"center\"><span style=\" font-size:10pt;\">H - глубина (гидростатика)</span></p><p align=\"center\"><span style=\" font-size:10pt;\">Ek - Энергия Кинетическая</span></p><p align=\"center\"><span style=\" font-size:10pt;\">Ep - Энергия Потенциальная</span></p><p align=\"center\"><span style=\" font-size:10pt;\">lyambda - лямбда</span></p></body></html>"))

find = input('Что вы хотите найти? ')
perem = input('Укажите данные переменные через пробел! ').split(' ')


if find == 'S':
    if 'x' and 'x0' in perem:
        s1()
    elif 'v' and 'v0' and 't' in perem:
        s2()
    elif 'v0' and 'a' and 't' in perem:
        s3()
    elif 'v' and 'v0' and 'a' in perem:
        s4()
    elif '-' in perem:
        s5()


elif find == 'v':
    if 'S' and 't' in perem:
        v1()
    elif 'r' and 'T' in perem:
        v2()
    elif 'r' and 'V' in perem:
        v3()
    elif 'om' and 'r' in perem:
        v4()
    elif 'G' and 'M' and 'R' in perem:
        v5()
    elif '-' in perem:
        v6()


elif find == 'a':
    if 'v' and 'v0' and 't' in perem:
        a1()
    elif 'v' and 'r' in perem:
        a2()
    elif 'om' and 'r' in perem:
        a3()
    elif 'Fr' and 'm' in perem:
        a4()
    elif '-' in perem:
        a5()


elif find == 'T':
    if 't' and 'N' in perem:
        T1()
    elif 'V' in perem:
        T2()
    elif '-' in perem:
        T3()


elif find == 'om':
    if 'fi' and 't' in perem:
        om1()
    elif 'Pi' and 'T' in perem:
        om2()
    elif 'Pi' and 'v' in perem:
        om3()
    elif '-' in perem:
        om4()


elif find == 'F':
    if 'u' and 'N' in perem:
        F1()
    elif 'k' and 'x' in perem:
        F2()
    elif 'm' and 'g' in perem:
        F3()
    elif 'G' and 'm1' and 'm2' and 'r' in perem:
        F4()
    elif 'plotnost' and 'g' and 'H' and 'S' in perem:
        F5()
    elif 'plotnost' and 'g' and 'H' and 'S' in perem:
        F6()
    elif 'plotnost' and 'g' and 'V' in perem:
        F7()
    elif 'F' and 'S2' and 'S1' in perem:
        F8()
    elif '-' in perem:
        F9()


elif find == 'g':
    if 'G' and 'M' and 'R' and 'h' in perem:
        g1()
    elif '-' in perem:
        g2()


elif find == 'P':
    if 'm' and 'g' and 'a' in perem:
        P1()
    elif '-' in perem:
        P2()


elif find == 'M':
    if 'F' and 'd' in perem:
        M1()
    elif '-' in perem:
        M2()


elif find == 'p':
    if 'F' and 'S' in perem:
        p1()
    elif 'plotnost' and 'g' and 'h' in perem:
        p2()
    elif '-' in perem:
        p3()


elif find == 'plotnost':
    if 'm' and 'V' in perem:
        plotnost1()
    elif '-' in perem:
        plotnost2()


elif find == 'A':
    if 'F' and 's' and 'cosa' in perem:
        A1()
    elif 'F' and 's' in perem:
        A2()
    elif 'm' and 'g' and 'h1' and 'h2' in perem:
        A3()
    elif 'k' and 'x1' and 'x2' in perem:
        A4()
    elif 'm' and 'v2' and 'v1' in perem:
        A5()
    elif '-' in perem:
        A6()


elif find == 'E':
    if 'm' and 'v' in perem:
        E1()
    elif 'm' and 'g' and 'h' in perem:
        E2()
    elif 'k' and 'x' in perem:
        E3()
    elif 'Ek' and 'Ep' in perem:
        E4()
    elif '-' in perem:
        E5()


elif find == 'N':
    if 'F' and 'v' in perem:
        N1()
    elif 'A' and 't' in perem:
        N2()
    elif '-' in perem:
        N3()


if __name__ == "__main__":
    import sys

    app = QtWidgets.QApplication(sys.argv)
    Form = QtWidgets.QWidget()
    ui = Ui_Form()
    ui.setupUi(Form)
    Form.show()
    sys.exit(app.exec_())
